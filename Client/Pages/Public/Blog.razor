@page "/blog"
@using Client.Components.Public.Blog
@inject InMemoryDatabaseCache InMemoryDatabaseCache
@implements IDisposable

<Client.Components.Public.Shared.Navbar />

<main class="container min-vh-90 py-5">
	<div class="row">
		<div class="col">
			<h1 class="my-3">Blog</h1>
			<p>Click a category card to view the blog posts</p>
			<div class="row">

				@if (InMemoryDatabaseCache.Categories != null)
				{
					for (int i = 0; i < InMemoryDatabaseCache.Categories.Count; i++)
					{
						@*Card 1*@
						<div class="col-md-4">
							<CategoryCard Category="InMemoryDatabaseCache.Categories[i]" />
						</div>
					}
				}


			</div>
		</div>
	</div>
</main>

<Client.Components.Public.Shared.Footer />

@code {

	// =================================================================
	// Subscribe on initialization to Database change notification
	// =================================================================
	protected override async Task OnInitializedAsync()
	{
		// Add event
		InMemoryDatabaseCache.OnCategoriesDataChanged += StateHasChanged;

		if (InMemoryDatabaseCache.Categories == null)
		{
			await InMemoryDatabaseCache.GetCategoriesFromDatabaseAndCache();
		}
	}

	// Unsubscribe on event dispose
	public void Dispose()
	{
		InMemoryDatabaseCache.OnCategoriesDataChanged -= StateHasChanged;
	}



}